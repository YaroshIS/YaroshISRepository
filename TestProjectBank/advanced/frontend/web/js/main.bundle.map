{"version":3,"sources":["webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/currency-form/currency-form.component.ts","webpack:///./src/app/currency-graphics/currency-graphics.component.ts","webpack:///./src/app/currency-list/currency-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/currency-form/currency-form.component.css","webpack:///./src/app/currency-graphics/currency-graphics.component.css","webpack:///./src/app/currency-list/currency-list.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/currency-form/currency-form.component.html","webpack:///./src/app/currency-graphics/currency-graphics.component.html","webpack:///./src/app/currency-list/currency-list.component.html","webpack:///./src/app/currency.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 350;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 350\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\nimport { HttpModule } from '@angular/http';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, [HttpModule]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Injectable }     from '@angular/core';\nimport { Component }      from '@angular/core';\n\nimport { Http, Response }           from '@angular/http';\nimport { CurrencyService}           from './currency.service';\n\nimport 'rxjs/add/operator/toPromise';\n\ninterface ICurrency {\n    'Cur_ID' : number,\n    'Cur_Name' : string,\n    'Cur_Abbreviation' : string,\n    'Cur_Scale' : number,\n    'Cur_OfficialRate' : number,\n    'Cur_Date' : any\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\n\n@Injectable()\nexport class AppComponent {\n    private viewTable = false;\n    private viewChart = false;\n\n    constructor(private currencyService : CurrencyService){\n        this.currencyService.updatePermissions.subscribe((data) => {\n            if(data.indexOf('viewTable') != -1){\n                this.viewTable = true\n            }\n            if(data.indexOf('viewChart') != -1){\n                this.viewChart = true;\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { CurrencyListComponent } from './currency-list/currency-list.component';\nimport { CurrencyFormComponent } from './currency-form/currency-form.component';\nimport { CurrencyService }       from './currency.service';\nimport { CurrencyGraphicsComponent } from './currency-graphics/currency-graphics.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        CurrencyListComponent,\n        CurrencyFormComponent,\n        CurrencyGraphicsComponent,\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpModule,\n    ],\n    providers: [\n        CurrencyService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {CurrencyService} from '../currency.service';\n@Component({\n    selector: 'app-currency-form',\n    templateUrl: './currency-form.component.html',\n    styleUrls: ['./currency-form.component.css'],\n})\nexport class CurrencyFormComponent {\n    private currencyList; // Переменная, хранящая список доступных валют\n    public selectedCurrencies = []; // Массив, хранящий выбранные валюты\n\n    private showList = false; // Переменная, контролирующая отображение списка доступных для выбора валют\n\n    public currencyFirstDate; // Переменная, хранящая начальную дату\n    public currencySecondDate; // Переменная, хранящая конечную дату\n    public error = {msg: '', formValid: true}; // Объект, отвечающий за наличие и содержание ошибки при неправильно введенных данных\n\n    constructor(private currencyService:CurrencyService) {\n        this.ClearSelectedCurrencies();\n    }\n\n    ngOnInit() {\n        this.currencyService.getCurrencyList()\n            .subscribe((data) => {\n                this.currencyList = data.json();\n            });\n    }\n\n    // Метод, переключающий отображение списка доступных валют\n    private ToggleShowList() {\n        this.showList = !this.showList;\n    }\n\n    // Метод, добавляющий валюту, по которой кликнули, в массив выбранных валют (при наличии этой валюты в массиве, она удаляется из массива выбранных валют)\n    private AddCurrency(currency) {\n        if (this.selectedCurrencies.indexOf(currency) != -1) {\n            this.selectedCurrencies.splice(this.selectedCurrencies.indexOf(currency), 1);\n        } else {\n            this.selectedCurrencies.push(currency);\n        }\n    }\n\n    // Срабатывает при нажатии на кнопку \"Получить\"\n    // Проверяет, правильно ли введены данные. В случае ошибки показывает ошибку и прекращает своё выполнение\n    // Если данные корректны - отправляет их в сервис.\n    private SendCurrencies() {\n        if (this.selectedCurrencies.length == 0) {\n            this.ShowError('Выберите валюту');\n            return false;\n        }\n\n        if (!this.CheckDates(this.currencyFirstDate, this.currencySecondDate)) {\n            this.ShowError('Выберите корректный промежуток времени');\n            return false;\n        }\n\n        this.error.formValid = true;\n        this.error.msg = '';\n\n        if (this.showList) {\n            this.showList = false;\n        }\n\n        let IDs = [];\n        for (let ID of this.selectedCurrencies) {\n            IDs.push(ID.Cur_ID);\n        }\n\n        this.currencyService.getSelectedCurrencies(this.selectedCurrencies, this.currencyFirstDate, this.currencySecondDate);\n    }\n\n    // Срабатывает при нажатии на кнопку \"Сброс\"\n    // Очищает форму.\n    private ClearSelectedCurrencies() {\n        this.selectedCurrencies = [];\n        this.currencySecondDate = '';\n        this.currencyFirstDate = '';\n        this.error.formValid = true;\n        this.error.msg = \"\";\n        this.showList = false;\n    }\n\n    // Проверка введенных дат\n    private CheckDates(date1, date2) {\n        let dateFrom = new Date(date1);\n        let dateTo = new Date(date2);\n        let dateNow = new Date();\n\n        if (dateFrom.toString() === 'Invalid Date' ||\n            dateTo.toString() === 'Invalid Date' ||\n            +dateFrom > +dateTo ||\n            +dateFrom > +dateNow ||\n            +dateTo > +dateNow\n        ) {\n            return false;\n        }\n        return true;\n    }\n\n    // Метод, выводящий ошибку в сообщением msg\n    private ShowError(msg) {\n        this.error.formValid = false;\n        this.error.msg = msg;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency-form/currency-form.component.ts","import {Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\n\nimport { CurrencyService } from '../currency.service'\n\nconst Highcharts = require('highcharts/highcharts.src');\nimport 'highcharts/adapters/standalone-framework.src';\n\n@Component({\n    selector: 'app-currency-graphics',\n    templateUrl: './currency-graphics.component.html',\n    styleUrls: ['./currency-graphics.component.css']\n})\n\nexport class CurrencyGraphicsComponent {\n    @ViewChild('chart') public chartEl:ElementRef; // Переменная, необходимая для работы с элементом графика\n\n    private opts; // Настройки для графика\n\n    private pages; // Переменная, отвечающая за количество страниц в графике\n    private page;\n\n    private _chart:any; // Переменная для работы с графиком\n\n    constructor(private currencyService:CurrencyService) {\n        this.opts = { // Задаём начальные настройик графика\n            series: [],\n            xAxis: {\n                type: 'datetime',\n                ordinal: true\n            },\n        };\n\n        // Подписка на изменение количества страниц\n        this.currencyService.updateChartPages.subscribe(data => {\n            this.pages = Array(data);\n            this.page = 0;\n        });\n\n        // Подписка на изменение курсов текущих валют\n        this.currencyService.updateChartRates.subscribe(data => {\n            this.GetRates(data);\n        })\n    }\n\n    // Срабатывает после полной загрузки и отображения компонента\n    public ngAfterViewInit() {\n        if (this.chartEl && this.chartEl.nativeElement) {\n            this.opts.chart = {\n                type: 'spline',\n                renderTo: this.chartEl.nativeElement,\n                zoomType: 'x'\n            };\n        }\n    }\n\n    // Срабатывает при уничтожении компонента\n    public ngOnDestroy() {\n        this._chart.destroy();\n    }\n\n    // Метод, принимающий курсы запрошенных валют.\n    // Выводит значения на экран в виде графика\n    private GetRates(rates) {\n        this._chart = new Highcharts.Chart(this.opts);\n\n        for (let curRates of rates) {\n            let data = [];\n\n            for (let RateOnDate of curRates) {\n                data.push([+new Date(RateOnDate.Date) + 1000 * 3600 * 24, RateOnDate.Cur_OfficialRate]);\n            }\n\n            this._chart.addSeries({\n                data: data,\n                name: curRates[0].Cur_Name,\n\n            });\n        }\n    }\n\n    // Метод, срабатывающий при смене страницы\n    private GetRatesOnPage(pageNumber:number) {\n        if(pageNumber == this.page){\n            return null;\n        }\n\n        this.page = pageNumber;\n        this.currencyService.GetRatesToChart(pageNumber);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency-graphics/currency-graphics.component.ts","import {Component, OnInit, Output, EventEmitter} from '@angular/core';\n\nimport {Observable} from 'rxjs/Rx';\nimport 'rxjs/add/operator/debounceTime';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { CurrencyService} from '../currency.service';\n\n\n@Component({\n    selector: 'app-currency-list',\n    templateUrl: './currency-list.component.html',\n    styleUrls: ['./currency-list.component.css']\n})\nexport class CurrencyListComponent {\n    private currencies = []; // Массив курсов полученных валют\n\n    private pages; // Переменная, отвечающая за количество страниц в таблице\n    private page;\n\n    constructor(private curService:CurrencyService) {\n\n        // Подписка на изменение количества страниц\n        this.curService.updateTablePages.subscribe((data) => {\n            this.pages = Array(data);\n            this.page = 0;\n        });\n\n        // Подписка на изменение курсов текущих валют\n        this.curService.updateTableRates.subscribe((data)=> {\n            this.currencies = data;\n        });\n    }\n\n    // Метод, срабатывающий при смене страницы\n    private GetRatesOnPage(pageNumber:number) {\n        if(pageNumber == this.page){\n            return null;\n        }\n\n        this.page = pageNumber;\n        this.curService.GetRatesToTable(pageNumber);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency-list/currency-list.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \".col-xs-4, .col-xs-8, .col-xs-12 {\\r\\n    height: 40em;\\r\\n}\\r\\n\\r\\n.table-hover th:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.table-body tr:hover {\\r\\n    cursor: default;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 622\n// module chunks = 1","module.exports = \"#my-drop-down-menu ul, ul#my-drop-down-menu {\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n#my-drop-down-menu {\\r\\n    position: relative; /* (!) */\\r\\n    z-index: 3;\\r\\n    width: 200px;\\r\\n    height: 20px;\\r\\n}\\r\\n\\r\\n#my-drop-down-menu li:hover {\\r\\n    background: #97e9eb;\\r\\n    border: 4px double black;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n\\r\\n#my-drop-down-menu li {\\r\\n    background: aliceblue;\\r\\n}\\r\\n\\r\\n#myBtn {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\nli.link {\\r\\n    list-style: none;\\r\\n    width: 200px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-form/currency-form.component.css\n// module id = 623\n// module chunks = 1","module.exports = \":host {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n:host .axis path,\\r\\n:host .axis line {\\r\\n    fill: none;\\r\\n    stroke: rgba(0, 0, 0, 0.2);\\r\\n    color: rgba(0, 0, 0, 0.2);\\r\\n    shape-rendering: crispEdges;\\r\\n}\\r\\n\\r\\n:host .axis text {\\r\\n    font-size: 11px;\\r\\n    fill: rgba(0, 0, 0, 0.9);\\r\\n}\\r\\n\\r\\n:host .grid .tick {\\r\\n    stroke: rgba(0, 0, 0, 0.1);\\r\\n    opacity: 0.3;\\r\\n}\\r\\n\\r\\n:host .grid path {\\r\\n    stroke-width: 0;\\r\\n}\\r\\n\\r\\n:host .grid .tick {\\r\\n    stroke: rgba(0, 0, 0, 0.1);\\r\\n    opacity: 0.3;\\r\\n}\\r\\n\\r\\n:host .grid path {\\r\\n    stroke-width: 0;\\r\\n}\\r\\n\\r\\n:host .color-label {\\r\\n    display: inline;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-graphics/currency-graphics.component.css\n// module id = 624\n// module chunks = 1","module.exports = \".table {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n#currencyTable {\\r\\n    overflow: auto;\\r\\n    height: 350px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-list/currency-list.component.css\n// module id = 625\n// module chunks = 1","module.exports = \"<hr>\\n<div class=\\\"container\\\">\\n    <app-currency-form align=\\\"center\\\"></app-currency-form>\\n    <div class=\\\"row\\\">\\n        <app-currency-graphics *ngIf=\\\"viewChart\\\" [class]=\\\"viewTable ? 'col-xs-6' : 'col-xs-12'\\\"></app-currency-graphics>\\n        <app-currency-list *ngIf=\\\"viewTable\\\" [class]=\\\"viewChart ? 'col-xs-6' : 'col-xs-12'\\\"></app-currency-list>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 626\n// module chunks = 1","module.exports = \"<div class=\\\"form-inline\\\">\\n\\n    <div class=\\\"form-group\\\" *ngIf=currencyList align=\\\"center\\\">\\n        <div class=\\\"btn btn-primary\\\"\\n             id=\\\"myBtn\\\"\\n             (click)=\\\"ToggleShowList()\\\"\\n             type=\\\"button\\\">\\n            Выбрать валюты\\n            <b class=\\\"caret\\\"></b>\\n        </div>\\n        <div id=\\\"my-drop-down-menu\\\"\\n             class=\\\"list\\\"\\n             *ngIf=\\\"showList\\\">\\n            <li *ngFor=\\\"let currency of currencyList\\\"\\n                class=\\\"link\\\"\\n                (click)=\\\"AddCurrency(currency)\\\">\\n                <i class=\\\"glyphicon glyphicon-ok\\\"\\n                   *ngIf=\\\"selectedCurrencies.indexOf(currency) != -1\\\"\\n                   aria-hidden=\\\"true\\\"></i>\\n                {{currency.Cur_Name}}\\n            </li>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" id=\\\"my-date-from\\\">\\n        На дату с:<input class=\\\"form-control\\\" type=\\\"date\\\"\\n                         [(ngModel)]=\\\"currencyFirstDate\\\"\\n                         #dateFrom=\\\"ngModel\\\"\\n                         placeholder=\\\"yyyy-mm-dd\\\"\\n                         required pattern=\\\"20[0-9]{2}[\\\\-\\\\.\\\\\\\\\\\\/][0-1][0-9][\\\\-\\\\.\\\\\\\\\\\\/][0-3][0-9]\\\">\\n        по: <input class=\\\"form-control\\\" type=\\\"date\\\"\\n                   [(ngModel)]=\\\"currencySecondDate\\\"\\n                   #dateTo=\\\"ngModel\\\"\\n                   placeholder=\\\"yyyy-mm-dd\\\"\\n                   required pattern=\\\"20[0-9]{2}[\\\\-\\\\.\\\\\\\\\\\\/][0-1][0-9][\\\\-\\\\.\\\\\\\\\\\\/][0-3][0-9]\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary form-control\\\"\\n                [disabled]=\\\"dateFrom.invalid || dateTo.invalid\\\"\\n                (click)=\\\"SendCurrencies()\\\">\\n            Получить\\n        </button>\\n        <button class=\\\"btn btn-danger\\\"\\n                (click)=\\\"ClearSelectedCurrencies()\\\">Сброс\\n        </button>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"!error.formValid\\\"\\n     class=\\\"alert alert-danger\\\">\\n    {{error.msg}}\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-form/currency-form.component.html\n// module id = 627\n// module chunks = 1","module.exports = \"<div>\\r\\n    <div>\\r\\n        <a *ngFor=\\\"let tpage of pages; let i = index\\\"\\r\\n           (click)=\\\"GetRatesOnPage(i)\\\">\\r\\n            <i class=\\\"glyphicon glyphicon-hand-right\\\"\\r\\n               *ngIf=\\\"page == i\\\"\\r\\n               aria-hidden=\\\"true\\\"></i>\\r\\n            <span>page {{i+1}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div #chart></div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-graphics/currency-graphics.component.html\n// module id = 628\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"currencies.length > 0\\\">\\n    <a *ngFor=\\\"let tpage of pages; let i = index\\\"\\n       (click)=\\\"GetRatesOnPage(i)\\\">\\n        <i class=\\\"glyphicon glyphicon-hand-right\\\"\\n           *ngIf=\\\"page == i\\\"\\n           aria-hidden=\\\"true\\\"></i>\\n        <span>page {{i+1}}</span>\\n    </a>\\n\\n    <div id='currencyTable'>\\n        <table class=\\\"table table-striped table-hover table-responsive col-xs-12\\\">\\n            <thead>\\n            <tr>\\n                <th align=\\\"center\\\"\\n                    class=\\\"col-xs-3\\\">\\n                    Дата:\\n                </th>\\n                <th *ngFor=\\\"let currencyOnRange of currencies\\\"\\n                    class=\\\"col-xs-3\\\"\\n                    align=\\\"center\\\">\\n                    {{currencyOnRange[0].Cur_Name}}\\n                </th>\\n            </tr>\\n            </thead>\\n        </table>\\n\\n        <table class=\\\"table table-striped table-hover table-responsive col-xs-12\\\">\\n            <tbody>\\n            <tr *ngFor=\\\"let currencyDates of currencies[0]; let i = index;\\\">\\n                <td>\\n                    <strong>{{currencies[0][i].Date.slice(5,10).replace('-','.')}}</strong>\\n                </td>\\n                <td *ngFor=\\\"let currencyNames of currencies; let j = index\\\">\\n                    {{currencies[j][i].Cur_OfficialRate}}\\n                </td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-list/currency-list.component.html\n// module id = 629\n// module chunks = 1","import {Injectable, Output, EventEmitter, OnInit } from '@angular/core';\nimport {Http, Headers, URLSearchParams, RequestOptions, RequestMethod}       from '@angular/http';\n\nimport {Observable} from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\nimport { CurrencyListComponent } from './currency-list/currency-list.component';\nimport { CurrencyGraphicsComponent } from './currency-graphics/currency-graphics.component';\n\n@Injectable()\nexport class CurrencyService {\n\n    private selectedCurs = [];\n    private dateFrom;\n    private dateTo;\n    private COUNT_OF_CURS_PER_REQUEST = 3; // Количество графиков/столбцов, которые впоследствии будут отображаться на графике/в таблице\n    private permissionsInfo;\n\n    // Переменная, которая хранит запрошенный курсы валют. На эту переменную подписаны компоненты график currency-graphics и таблица currency-list\n    @Output() updateChartRates = new EventEmitter();\n    @Output() updateTableRates = new EventEmitter();\n\n    // Переменные, которые отвечают за количество страниц в компонентах currency-graphics и currency-list\n    @Output() updateTablePages = new EventEmitter();\n    @Output() updateChartPages = new EventEmitter();\n\n    @Output() updatePermissions = new EventEmitter();\n\n    constructor(private http:Http) {\n        let url = 'http://angular.f.dev/api/get-user-info';\n        this.http.get(url).subscribe((data) => {\n            this.permissionsInfo = Object.keys(data.json());\n            this.updatePermissions.emit(this.permissionsInfo);\n        });\n    }\n\n    // GET Запрос на получение всех доступных для выбора валют\n    getCurrencyList() {\n        return this.http.get('http://angular.f.dev/api/get-currencies');\n    }\n\n    // POST запрос на получение курсов валют по ID на дату с this.dateFrom по this.dateTo;\n    // Ответ от сервера - массив, каждый элемент которого также является массивом и содержит в себе курсы валюты на запрошенный период\n    // Т.к. в этом вложенном массиве нет имени валюты (есть только ID), то метод первому элементу массива присваивает\n    // имя валюты через метод urIDtoName. Это нужно для дальнейшего отображения в графике и таблице\n    getCurrenciesRates(cursID) {\n        let url = 'http://angular.f.dev/api/get-currencies-rate-on-range';\n\n        let headers = new Headers();\n\n        let options = new RequestOptions({headers: headers, method: 'post'});\n\n        let data = new URLSearchParams();\n        data.set('cursID', JSON.stringify(cursID));\n        data.set('dateFrom', JSON.stringify(this.dateFrom));\n        data.set('dateTo', JSON.stringify(this.dateTo));\n\n        this.http.post(url, data, options).subscribe(response => {\n            let resp = response.json();\n            for (let respCur of resp) {\n                respCur[0].Cur_Name = this.CurIDtoName(respCur[0].Cur_ID);\n            }\n            this.updateChartRates.emit(resp);\n            this.updateTableRates.emit(resp);\n        });\n    }\n\n    getCurrRates(cursID) {\n        let url = 'http://angular.f.dev/api/get-currencies-rate-on-range';\n\n        let headers = new Headers();\n\n        let options = new RequestOptions({headers: headers, method: 'post'});\n\n        let data = new URLSearchParams();\n        data.set('cursID', JSON.stringify(cursID));\n        data.set('dateFrom', JSON.stringify(this.dateFrom));\n        data.set('dateTo', JSON.stringify(this.dateTo));\n\n        return this.http.post(url, data, options);\n    }\n\n    // Метод, принимающий выбранные валюты и период от формы\n    getSelectedCurrencies(curs, dateFrom, dateTo) {\n        this.selectedCurs = curs;\n\n        this.dateFrom = dateFrom;\n        this.dateTo = dateTo;\n\n        let countOfPages = Math.ceil(this.selectedCurs.length / this.COUNT_OF_CURS_PER_REQUEST);\n\n        let startPage = 0;\n\n        if(this.permissionsInfo.indexOf('viewChart') != -1){\n            this.updateChartPages.emit(countOfPages);\n            this.GetRatesToChart(startPage);\n        }\n\n        if(this.permissionsInfo.indexOf('viewTable') != -1){\n            this.updateTablePages.emit(countOfPages);\n            this.GetRatesToTable(startPage);\n        }\n\n    }\n\n    // Метод, возвращающий количество максимально отображаемых графиков/столбцов в компоненте currency-graphics/currency-list\n    public GetCountOfCursPerRequest() {\n        return this.COUNT_OF_CURS_PER_REQUEST;\n    }\n\n    // Метод, который срабатывает при смене страницы либо в таблице, либо на графике.\n    // Формирует нужные ID и делает запрос на сервер через метод getCurrenciesRates.\n    public GetRatesOnPage(pageNumber) {\n        let startIndex = pageNumber * this.COUNT_OF_CURS_PER_REQUEST;\n        let requestedCurs = this.selectedCurs.slice(startIndex, startIndex + this.COUNT_OF_CURS_PER_REQUEST);\n\n        let IDs = [];\n        for (let cur of requestedCurs) {\n            IDs.push(cur.Cur_ID);\n        }\n    }\n\n    public GetRatesToChart(pageNumber) {\n        let IDs = this.GetIDsOnPage(pageNumber);\n\n        this.getCurrRates(IDs).subscribe((response) => {\n            let resp = response.json();\n            for (let currencyRates of resp) {\n                currencyRates[0].Cur_Name = this.CurIDtoName(currencyRates[0].Cur_ID);\n            }\n            this.updateChartRates.emit(resp);\n        });\n    }\n\n    public GetRatesToTable(pageNumber) {\n        let IDs = this.GetIDsOnPage(pageNumber);\n\n        this.getCurrRates(IDs).subscribe((response) => {\n            let resp = response.json();\n            for (let currencyRates of resp) {\n                currencyRates[0].Cur_Name = this.CurIDtoName(currencyRates[0].Cur_ID);\n            }\n            this.updateTableRates.emit(resp);\n        });\n    }\n\n    public GetPermissionsInfo(){\n        return this.permissionsInfo;\n    }\n\n    private GetIDsOnPage(pageNumber) {\n        let startIndex = pageNumber * this.COUNT_OF_CURS_PER_REQUEST;\n        let requestedCurs = this.selectedCurs.slice(startIndex, startIndex + this.COUNT_OF_CURS_PER_REQUEST);\n\n        let IDs = [];\n        for (let currency of requestedCurs) {\n            IDs.push(currency.Cur_ID);\n        }\n\n        return IDs;\n    }\n\n    // Метод, возвращающий ID валюты по её имени\n    private CurIDtoName(curID) {\n        for (let currency of this.selectedCurs) {\n            if (currency.Cur_ID == curID) {\n                return currency.Cur_Name;\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency.service.ts"],"sourceRoot":""}