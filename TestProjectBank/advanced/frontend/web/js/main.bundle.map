{"version":3,"sources":["webpack:///./src/app/currency-graphics/currency-graphics.component.ts","webpack:///./src/app/currency-list/currency-list.component.ts","webpack:///./src/app/currency.service.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/currency-counter/currency-counter.component.ts","webpack:///./src/app/currency-form/currency-form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/currency-counter/currency-counter.component.css","webpack:///./src/app/currency-form/currency-form.component.css","webpack:///./src/app/currency-graphics/currency-graphics.component.css","webpack:///./src/app/currency-list/currency-list.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/currency-counter/currency-counter.component.html","webpack:///./src/app/currency-form/currency-form.component.html","webpack:///./src/app/currency-graphics/currency-graphics.component.html","webpack:///./src/app/currency-list/currency-list.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\n\nconst Highcharts = require('highcharts/highcharts.src');\nimport 'highcharts/adapters/standalone-framework.src';\n\n@Component({\n    selector: 'app-currency-graphics',\n    templateUrl: './currency-graphics.component.html',\n    styleUrls: ['./currency-graphics.component.css']\n})\n\nexport class CurrencyGraphicsComponent{\n\n    @ViewChild('chart') public chartEl: ElementRef; // Переменная, необходимая для работы с элементом графика\n    @Output() getRates = new EventEmitter(); // Переменная, позволяющая вызывать методы родительского управляющего компонента. В управляющем компоненте вызывает метод GetRatesToGraphics(...)\n\n    private cursID; // Массив ID отображаемых в данный момент валют\n    private dateFrom; // Начальная дата\n    private dateTo; // Конечная дата\n\n    private opts; // Настройки для графика\n\n    private COUNT_OF_RATES; // Максимальное количество значений на графике(передаётся php-серверу, который обрабатывает получение нужного количества значений)\n\n    private _chart: any; // Переменная для работы с графиком\n\n    constructor(){\n        this.COUNT_OF_RATES = 15; // Максимальное количество значений на графике\n\n        this.opts = { // Задаём начальные настройик графика\n            series: [],\n            xAxis : {\n                type: 'datetime',\n                ordinal: true\n            },\n        }\n    }\n\n    // Срабатывает после полной загрузки и отображения компонента\n    public ngAfterViewInit() {\n        if (this.chartEl && this.chartEl.nativeElement) {\n            this.opts.chart = {\n                type: 'spline',\n                renderTo: this.chartEl.nativeElement,\n                zoomType: 'x'\n            };\n        }\n    }\n\n    // Срабатывает при уничтожении компонента\n    public ngOnDestroy() {\n        this._chart.destroy();\n    }\n\n    // Отправляет запрос в управляющий компонент currency-counter и вызывает в нём метод GetRatesToGraphics.\n    // Данные в запросе: 1. ID нужных валют; 2. Начальную дату; 3. Конечную дату; 4. Количество максимальных значений в графике\n    public SendRequest(){\n        let output = [this.cursID, this.dateFrom, this.dateTo, this.COUNT_OF_RATES];\n\n        this.getRates.emit(output);\n    }\n\n    // Вызывается в управляющем компоненте currency-counter\n    // Метод, принимающий начальную и конечную даты. На этот период будет отправляться запрос к управляющему компоненту currency-counter\n    public GetDates(dateFrom,dateTo){\n        this.dateFrom = dateFrom;\n        this.dateTo = dateTo;\n    }\n\n    // Вызывается в управляющем компоненте currency-counter\n    // Метод, принимающий ID валют, которые необходимо отобразить на графике.\n    public GetSelectedID(cursID){\n        if (this.cursID != cursID) {\n            this.cursID = cursID;\n            return true;\n        }\n        return false;\n    }\n\n    // Вызывается в управляющем компоненте currency-counter\n    // Метод, принимающий курсы запрошенных валют на запрошенный период времени\n    public GetRates(rates){\n        this._chart = new Highcharts.Chart(this.opts);\n\n        for(let curRates of rates){\n            let data = [];\n\n            for(let RateOnDate of curRates){\n                data.push([+new Date(RateOnDate.Date)+1000*3600*24, RateOnDate.Cur_OfficialRate]);\n            }\n\n            this._chart.addSeries({\n                data: data,\n                name: curRates[0].Cur_Name,\n\n            });\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency-graphics/currency-graphics.component.ts","import {Component, OnInit, Output, EventEmitter} from '@angular/core';\n\nimport {Observable} from 'rxjs/Rx';\nimport 'rxjs/add/operator/debounceTime';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n\n@Component({\n    selector: 'app-currency-list',\n    templateUrl: './currency-list.component.html',\n    styleUrls: ['./currency-list.component.css']\n})\nexport class CurrencyListComponent{\n    @Output() getRates = new EventEmitter(); // Переменная, позволяющая вызывать методы родительского управляющего компонента. В управляющем компоненте вызывает метод GetRates(...)\n\n    private currencies; // Массив всех выбранных валют\n    private selectedID; // Массив ID выбранных валют\n    private currentID; // Массив отображаемых на данный момент ID в таблице\n\n    private dateFrom; // Начальная дата\n    private dateTo; // Конечная дата (полученная из формы)\n    private dateToCurrent; // Конечная дата, которая ограничивает максимальное кол-во дат за один запрос\n\n    private pages; // Переменная, хранящая в себе количество страниц таблицы\n    private page; // Переменная, хранящая текущую страницы\n\n    private COUNT_OF_COLUMNS; // Константа, определяющая сколько валют будет отображаться в таблице\n    private DATE_PERIOD; // Константа, определяющая период кол-ва дат на один запрос.\n\n    constructor() {\n        this.currencies = [];\n        this.dateFrom = \"\";\n        this.dateTo = \"\";\n        this.currentID = [];\n        this.COUNT_OF_COLUMNS = 3; // Количество отображаемых в таблице валют\n        this.DATE_PERIOD = 10; // Сколько дней нужно добавлять к текущей дате на один запрос.\n    }\n\n    // Срабатывает при смене страницы в таблице\n    // Обнуляет массив текущих отображаемых валют\n    // Получает номера ID нужных валют.\n    // Добавляет к текущей конечной дате ещё один период и делает запрос на переданные значения\n    GetRatesOnPage(pageNumber: number) {\n        if(pageNumber == this.page) return;\n\n        this.page = pageNumber;\n\n        this.currencies = [];\n\n        this.dateToCurrent = this.addDaysToDate(this.dateFrom,this.DATE_PERIOD);\n\n        if( +(new Date(this.dateToCurrent)) > +(new Date(this.dateTo)))\n            this.dateToCurrent = this.dateTo;\n\n        this.currentID = this.GetIDsOnPage(pageNumber);\n\n        let output = [this.currentID, this.dateFrom, this.dateToCurrent];\n\n        this.getRates.emit(output);\n    }\n\n    // Вызывается управляющим компонентом и принимает ID валют, выбранных в форме, а также начальную и конечную даты\n    // Вычисляет количество страниц и назначает значение текущей страницы равным 0.\n    // После получения данных выбирает, какие ID и на какой период будут отображаться в таблице на данный момент и отсылает данные к управляющему компоненту для получения курсов.\n    GetSelectedCurrencies(selectedID,dateFrom,dateTo){\n        this.currencies = [];\n        this.selectedID = selectedID;\n        this.dateFrom = dateFrom;\n        this.dateTo = dateTo;\n        this.dateToCurrent = this.addDaysToDate(dateFrom,this.DATE_PERIOD);\n\n        this.pages = Array(Math.ceil(selectedID.length / this.COUNT_OF_COLUMNS));\n        this.page = 0;\n\n        let maxCountOfCurrencies = selectedID.length < this.COUNT_OF_COLUMNS ? selectedID.length : this.COUNT_OF_COLUMNS;\n\n        this.currentID = [];\n        for(let i = 0; i < maxCountOfCurrencies; i++){\n            this.currentID.push(selectedID[i]);\n        }\n\n        if( +(new Date(this.dateToCurrent)) > +(new Date(this.dateTo)) ){\n            this.dateToCurrent = this.dateTo;\n        }\n\n        let output = [this.currentID,this.dateFrom,this.dateToCurrent];\n\n        this.getRates.emit(output);\n    }\n\n    // Вызывается управляющим компонентом и принимает курсы запрошенных валют на запрошенный период\n    // Если в массиве отображаемых валют уже были какие-то значения (т.е. был запрос на получение курсов валют на следующий период), то значения добавляются в конец массива\n    // Если массив отображаемых валют был пуст (например, при переключении страницы или первом отображении таблицы), то массив перезаписывается\n    GetRates(rates){\n        if(this.currencies.length == 0)\n            this.currencies = rates;\n        else{\n            for(let i = 0; i < rates.length; i++) {\n                for (let j = 0; j < rates[0].length; j++) {\n                    this.currencies[i].push(rates[i][j]);\n                }\n            }\n        }\n    }\n\n    // Срабатывает при нажатии на ссылку \"Show More Dates\"\n    // Вычисляет, на какой период нужно взять даты и отсылает данные управляющему компоненту\n    GetMoreRates(){\n        let nextDay = this.addDaysToDate(this.dateToCurrent,1);\n        let nextPeriod = this.addDaysToDate(this.dateToCurrent,this.DATE_PERIOD);\n\n        if( +(new Date(nextPeriod)) > +(new Date(this.dateTo)) ){\n            nextPeriod = this.dateTo;\n        }\n\n        let output = [this.currentID, nextDay, nextPeriod, this.dateTo];\n\n        this.dateToCurrent = nextPeriod;\n\n        this.getRates.emit(output);\n    }\n\n    // Метод, позволяющий добавить к дате data, переданной в строковом формате, прибавить days дней.\n    // Возвращает дату, к которой прибавлено days дней в стороковом формате\n    private addDaysToDate(data, days){\n        data = data.split('-');\n        data = new Date(data[0], +data[1]-1, +data[2]+days, 0, 0, 0, 0);\n        data = [data.getFullYear(),data.getMonth()+1,data.getDate()];\n        data[2] = data[2] < 10 ? '0'+data[2] : data[2];\n        data = data.join('-').replace(/(^|\\/)(\\d)(?=\\/)/g,\"$10$2\");\n        return data;\n    }\n\n    // Получает ID валют, которые отображаются на текущей странице таблицы\n    private GetIDsOnPage(pageNumber){\n        let startIndex = (pageNumber)*this.COUNT_OF_COLUMNS;\n\n        let IDs = this.selectedID.slice(startIndex, startIndex + this.COUNT_OF_COLUMNS);\n\n        return IDs;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency-list/currency-list.component.ts","import {Injectable, Output} from '@angular/core';\nimport {Http, Headers, URLSearchParams, RequestOptions, RequestMethod}       from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class CurrencyService {\n\n    constructor(private http: Http) {\n    }\n\n    // GET Запрос на получение всех доступных для выбора валют\n    getCurrencyList() {\n        return this.http.get('http://angular.f.dev/api/get-currencies')\n            .toPromise()\n            .then(response => response.json());\n    }\n\n    // POST запрос на получение курсов валют на период с dateFrom по dateTo по переданным ID валют cursID\n    getCurrenciesRateOnRange(cursID, dateFrom : string, dateTo: string){\n        let url = 'http://angular.f.dev/api/get-currencies-rate-on-range';\n\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n        let options = new RequestOptions({ headers: headers, method: 'post'});\n\n        let data = new URLSearchParams();\n        data.set('dateFrom', JSON.stringify(dateFrom));\n        data.set('dateTo', JSON.stringify(dateTo));\n        data.set('cursID', JSON.stringify(cursID));\n\n        return this.http.post(url,data,options)\n            .toPromise()\n            .then(response => response.json());\n    }\n\n    // POST запрос на получение определенного количества (countOfRates) курсов валют с IDшниками cursId на период с dateFrom по dateTo\n    getCurrenciesRatesOnDates(cursID, dateFrom : string, dateTo : string, countOfRates){\n        let url = 'http://angular.f.dev/api/get-currencies-rate-on-dates';\n\n        let headers = new Headers();\n        headers.append('Content-type', 'application/x-www-form-urlencoded');\n\n        let options = new RequestOptions({ headers: headers, method: 'post'});\n\n        let data = new URLSearchParams();\n        data.set('cursID', JSON.stringify(cursID));\n        data.set('dateFrom', JSON.stringify(dateFrom));\n        data.set('dateTo', JSON.stringify((dateTo)));\n        data.set('countOfRates', JSON.stringify(countOfRates));\n\n        return this.http.post(url,data,options)\n            .toPromise()\n            .then(response => response.json());\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 351;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 351\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\nimport { HttpModule } from '@angular/http';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, [HttpModule]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Injectable }     from '@angular/core';\nimport { Component }      from '@angular/core';\n\nimport { Http, Response }           from '@angular/http';\nimport { CurrencyService}           from './currency.service';\n\nimport 'rxjs/add/operator/toPromise';\n\ninterface ICurrency {\n  'Cur_ID' : number,\n  'Cur_Name' : string,\n  'Cur_Abbreviation' : string,\n  'Cur_Scale' : number,\n  'Cur_OfficialRate' : number,\n  'Cur_Date' : any\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\n\n@Injectable()\nexport class AppComponent {\n\n  ngOnInit(){}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { CurrencyListComponent } from './currency-list/currency-list.component';\nimport { CurrencyFormComponent } from './currency-form/currency-form.component';\nimport { CurrencyService }       from './currency.service';\nimport { CurrencyCounterComponent } from './currency-counter/currency-counter.component';\nimport { CurrencyGraphicsComponent } from './currency-graphics/currency-graphics.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrencyListComponent,\n    CurrencyFormComponent,\n    CurrencyCounterComponent,\n    CurrencyGraphicsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n  ],\n  providers: [\n      CurrencyService\n    ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Component, OnInit, ViewChild} from '@angular/core';\n\nimport {CurrencyService} from \"../currency.service\";\n\nimport { CurrencyListComponent } from '../currency-list/currency-list.component';\nimport {CurrencyGraphicsComponent} from \"../currency-graphics/currency-graphics.component\";\n\n@Component({\n  selector: 'app-currency-counter',\n  templateUrl: './currency-counter.component.html',\n  styleUrls: ['./currency-counter.component.css']\n})\n\n//Главный управляющий компонент. Принимает данные от компонентов, приводит к нужному виду, отсылает их к сервису, принимает от него ответы и возвращает результаты компонентам.\nexport class CurrencyCounterComponent implements OnInit {\n  @ViewChild(CurrencyListComponent) listComponent : CurrencyListComponent; // переменная, позволяющая использовать методы компонента currency-list (Таблицы)\n  @ViewChild(CurrencyGraphicsComponent) graphicsComponent : CurrencyGraphicsComponent; // переменная, позволяющая использовать методы компонента currency-graphics (Графика)\n  public currencyList; // массив, хранящий все доступные валюты.\n\n  constructor(private currencyService : CurrencyService) { // получаем экземпляр сервиса для возможности отправки запросов на сервер\n  }\n\n  // Срабатывает при инициализации компонента.\n  // Делает запрос на получение всех доступных валют и в виде массива передаёт их компоненту currency-form\n  ngOnInit() {\n    this.currencyService.getCurrencyList()\n        .then((data) => this.currencyList = data);\n  }\n\n  // Срабатывает при нажатии на кнопку \"Получить\"\n  // Принимает выделенные валюты и даты от компонента формы.\n  // Отправляет компоненту графика начальную и конечные даты\n  // Отправляет ID выбранных валют, начальную и конечные даты в компонент таблицы.\n  GetSelectedCurrencies(selectedCurr_dateFrom_dateTo){ // Этот метод вызывается из дочернего компонента currency-form. Такие методы, принимают один аргумент $event, поэтому переменную я так коряво назвал, чтобы дать ей какой-то смысл)\n    let selectedCurrencies = selectedCurr_dateFrom_dateTo[0];\n    let dateFrom = selectedCurr_dateFrom_dateTo[1];\n    let dateTo = selectedCurr_dateFrom_dateTo[2];\n\n    let selectedID = [];\n\n    for(let selectedCurr of selectedCurrencies){\n      selectedID.push(selectedCurr.Cur_ID);\n    }\n\n    this.graphicsComponent.GetDates(dateFrom,dateTo);\n\n    this.listComponent.GetSelectedCurrencies(selectedID,dateFrom,dateTo);\n  }\n\n  // Срабатывает, когда компонент currency-list делает запрос на получение курсов определенных валют на период времени\n  // Такие запросы возникают либо при переключении страницы в таблице, либо при нажатии на кнопку \"Show More Dates\"\n  // Принимает ID валют и период времени, которые нужны на данный момент в таблицу.\n  // При переключении страницы в графике валюты также должны меняться, поэтому метод отсылает данные ещё и графику (при условии, что мы переключаем страницу)\n  // Отсылает запрос к сервису на получение нужных курсов валют и передаёт их обратно компоненту currency-list.\n  GetRates(ID_dateFrom_dateToCurrent){\n    let ID = ID_dateFrom_dateToCurrent[0];\n    let dateFrom = ID_dateFrom_dateToCurrent[1];\n    let dateToCurrent = ID_dateFrom_dateToCurrent[2];\n\n    if(this.graphicsComponent.GetSelectedID(ID)){\n      this.graphicsComponent.SendRequest();\n    }\n\n    this.currencyService.getCurrenciesRateOnRange(ID,dateFrom,dateToCurrent)\n        .then((data) => {\n          for(let currencyOnRange of data){\n            currencyOnRange[0].Cur_Name = this.CurIDtoName(currencyOnRange[0].Cur_ID);\n          }\n          this.listComponent.GetRates(data);\n        });\n  }\n\n  // Срабатывает, когда компонент currency-graphics делает запрос на получение курсов валют с начального по конечный период времени.\n  // Валюты будут соответсвовать тем, что отображаются на данный момент в таблице.\n  // В качестве аргументов здесь выступают 1. ID нужных валют; 2. Начальная дата; 3. Конечная дата; 4. Количество дат (т.к. в графике отображается ограниченное кол-во значений)\n  // Отсылает запрос к сервису и возвращает результат в компонент currency-graphics\n  GetRatesToGraphics(ID_dates){\n    let ID = ID_dates[0];\n    let dateFrom = ID_dates[1];\n    let dateTo = ID_dates[2];\n    let countOfRates = ID_dates[3];\n\n    this.currencyService.getCurrenciesRatesOnDates(ID,dateFrom,dateTo,countOfRates)\n        .then(response => {\n          for(let currencyOnRange of response){\n            currencyOnRange[0].Cur_Name = this.CurIDtoName(currencyOnRange[0].Cur_ID);\n          }\n          this.graphicsComponent.GetRates(response)\n        } );\n  }\n\n  // Метод для получения ID валюты по её имени\n  private CurIDtoName(curID){\n    for(let currency of this.currencyList){\n      if(currency.Cur_ID == curID) return currency.Cur_Name;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency-counter/currency-counter.component.ts","import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-currency-form',\n  templateUrl: './currency-form.component.html',\n  styleUrls: ['./currency-form.component.css'],\n})\nexport class CurrencyFormComponent {\n  @Input() currencyList; // Переменная, хранящая список доступных валют\n  @Output() addList = new EventEmitter(); // Переменная, с помощью которой можно передать список выбранных валют управляющему компоненту currency-counter.\n  public selectedCurrencies; // Массив, хранящий выбранные валюты\n\n  private showList; // Переменная, контролирующая отображение списка доступных для выбора валют\n\n  public currencyFirstDate; // Переменная, хранящая начальную дату\n  public currencySecondDate; // Переменная, хранящая конечную дату\n  public error; // Объект, отвечающий за наличие и содержание ошибки при неправильно введенных данных\n\n  constructor() {\n    this.error = { msg: '' , formValid : true}; // Ошибки нет, форма валидна\n    this.selectedCurrencies = [];\n    this.showList = false;\n  }\n\n  // Метод, переключающий отображение списка доступных валют\n  ToggleShowList(){\n    this.showList = !this.showList;\n  }\n\n  // Метод, добавляющий валюту, по которой кликнули, в массив выбранных валют (при наличии этой валюты в массиве, она удаляется из массива выбранных валют)\n  AddCurrency(currency){\n    if(this.selectedCurrencies.indexOf(currency) != -1)\n      this.selectedCurrencies.splice(this.selectedCurrencies.indexOf(currency),1);\n    else\n        this.selectedCurrencies.push(currency);\n  }\n\n  // Срабатывает при нажатии на кнопку \"Получить\"\n  // Проверяет, правильно ли введены данные. В случае ошибки показывает ошибку и прекращает своё выполнение\n  // Если данные корректны - отправляет их управляющему компоненту.\n  SendCurrencies(){\n    if(this.selectedCurrencies.length == 0){\n      this.ShowError('Выберите валюту');\n      return false;\n    }\n\n    if(!this.CheckDates(this.currencyFirstDate,this.currencySecondDate)){\n      this.ShowError('Выберите корректный промежуток времени');\n      return false;\n    }\n\n    this.error.formValid = true;\n    this.error.msg = '';\n\n    if(this.showList)\n      this.showList = false;\n\n    let output = [this.selectedCurrencies, this.currencyFirstDate, this.currencySecondDate];\n    this.addList.emit(output);\n  }\n\n  // Срабатывает при нажатии на кнопку \"Сброс\"\n  // Очищает форму.\n  private ClearSelectedCurrencies(){\n    this.selectedCurrencies = [];\n    this.currencySecondDate = '';\n    this.currencyFirstDate = '';\n    this.error.formValid = true;\n    this.error.msg = \"\";\n    this.showList = false;\n  }\n\n  // Проверка введенных дат\n  private CheckDates(date1,date2){\n    let dateFrom = new Date(date1);\n    let dateTo = new Date(date2);\n    let dateNow = new Date();\n\n    if( dateFrom.toString() == 'Invalid Date' ||\n        dateTo.toString() == 'Invalid Date' ||\n        +dateFrom > +dateTo ||\n        +dateFrom > +dateNow ||\n        +dateTo > +dateNow\n    ){\n     return false;\n    }\n    return true;\n  }\n\n  // Метод, выводящий ошибку в сообщением msg\n  private ShowError(msg){\n    this.error.formValid = false;\n    this.error.msg = msg;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/currency-form/currency-form.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \".col-xs-4, .col-xs-8, .col-xs-12{\\r\\n    height: 40em;\\r\\n}\\r\\n\\r\\n.table-hover th:hover{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.table-body tr:hover{\\r\\n    cursor:default;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 622\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-counter/currency-counter.component.css\n// module id = 623\n// module chunks = 1","module.exports = \"#my-drop-down-menu ul, ul#my-drop-down-menu{\\r\\n    list-style:none;\\r\\n}\\r\\n\\r\\n#my-drop-down-menu{\\r\\n    position:relative; /* (!) */\\r\\n    z-index:3;\\r\\n    width:200px;\\r\\n    height:20px;\\r\\n}\\r\\n\\r\\n#my-drop-down-menu li:hover{\\r\\n    background: #97e9eb;\\r\\n    border: 4px double black;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n\\r\\n#my-drop-down-menu li{\\r\\n    background: aliceblue;\\r\\n}\\r\\n\\r\\n#myBtn{\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\nli.link{\\r\\n    list-style: none;\\r\\n    width: 200px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-form/currency-form.component.css\n// module id = 624\n// module chunks = 1","module.exports = \":host {\\r\\n    display:block;\\r\\n}\\r\\n:host .axis path,\\r\\n:host .axis line {\\r\\n    fill: none;\\r\\n    stroke: rgba(0, 0, 0, 0.2);\\r\\n    color: rgba(0, 0, 0, 0.2);\\r\\n    shape-rendering: crispEdges;\\r\\n}\\r\\n\\r\\n:host .axis text {\\r\\n    font-size: 11px;\\r\\n    fill: rgba(0, 0, 0, 0.9);\\r\\n}\\r\\n\\r\\n:host .grid .tick {\\r\\n    stroke: rgba(0, 0, 0, 0.1);\\r\\n    opacity: 0.3;\\r\\n}\\r\\n\\r\\n:host .grid path {\\r\\n    stroke-width: 0;\\r\\n}\\r\\n\\r\\n:host .grid .tick {\\r\\n    stroke: rgba(0, 0, 0, 0.1);\\r\\n    opacity: 0.3;\\r\\n}\\r\\n\\r\\n:host .grid path {\\r\\n    stroke-width: 0;\\r\\n}\\r\\n:host .color-label{\\r\\n    display: inline;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-graphics/currency-graphics.component.css\n// module id = 625\n// module chunks = 1","module.exports = \".table {\\r\\n    margin-bottom: 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-list/currency-list.component.css\n// module id = 626\n// module chunks = 1","module.exports = \"<hr>\\n<div class=\\\"container\\\">\\n    <app-currency-counter></app-currency-counter>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 627\n// module chunks = 1","module.exports = \"<app-currency-form [currencyList]=\\\"currencyList\\\"\\n                   (addList)=\\\"GetSelectedCurrencies($event)\\\"\\n                   class=\\\"col-xs-12\\\"\\n                   align=\\\"center\\\">\\n</app-currency-form>\\n\\n<div style=\\\"height : 400px;\\\">\\n    <app-currency-graphics (getRates)=\\\"GetRatesToGraphics($event)\\\"\\n                           class=\\\"col-xs-6\\\">\\n    </app-currency-graphics>\\n\\n    <app-currency-list (getRates)=\\\"GetRates($event)\\\"\\n                       class=\\\"col-xs-6\\\">\\n    </app-currency-list>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-counter/currency-counter.component.html\n// module id = 628\n// module chunks = 1","module.exports = \"<div class=\\\"form-inline\\\">\\n\\n        <div class=\\\"form-group\\\" *ngIf = currencyList align=\\\"center\\\">\\n            <div class=\\\"btn btn-primary\\\"\\n                 id=\\\"myBtn\\\"\\n                 (click)=\\\"ToggleShowList()\\\"\\n                 type=\\\"button\\\">\\n                Выбрать валюты\\n                <b class=\\\"caret\\\"></b>\\n            </div>\\n            <div id=\\\"my-drop-down-menu\\\"\\n                class=\\\"list\\\"\\n                *ngIf=\\\"showList\\\">\\n                <li *ngFor = \\\"let currency of currencyList\\\"\\n                    class=\\\"link\\\"\\n                    (click)=\\\"AddCurrency(currency)\\\">\\n                    <i class=\\\"glyphicon glyphicon-ok\\\"\\n                       *ngIf=\\\"selectedCurrencies.indexOf(currency) != -1\\\"\\n                       aria-hidden=\\\"true\\\"></i>\\n                    {{currency.Cur_Name}}\\n                </li>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" id=\\\"my-date-from\\\">\\n            На дату с:<input class=\\\"form-control\\\" type=\\\"date\\\"\\n                            [(ngModel)]=\\\"currencyFirstDate\\\"\\n                            #dateFrom=\\\"ngModel\\\"\\n                            placeholder=\\\"yyyy-mm-dd\\\"\\n                            required pattern=\\\"20[0-9]{2}[\\\\-\\\\.\\\\\\\\\\\\/][0-1][0-9][\\\\-\\\\.\\\\\\\\\\\\/][0-3][0-9]\\\">\\n            по: <input class=\\\"form-control\\\" type=\\\"date\\\"\\n                       [(ngModel)]=\\\"currencySecondDate\\\"\\n                       #dateTo=\\\"ngModel\\\"\\n                       placeholder=\\\"yyyy-mm-dd\\\"\\n                       required pattern=\\\"20[0-9]{2}[\\\\-\\\\.\\\\\\\\\\\\/][0-1][0-9][\\\\-\\\\.\\\\\\\\\\\\/][0-3][0-9]\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-primary form-control\\\"\\n                    [disabled]=\\\"dateFrom.invalid || dateTo.invalid\\\"\\n                    (click)=\\\"SendCurrencies()\\\">\\n                Получить\\n            </button>\\n            <button class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"ClearSelectedCurrencies()\\\">Сброс</button>\\n        </div>\\n</div>\\n\\n<div *ngIf=\\\"!error.formValid\\\"\\n     class=\\\"alert alert-danger\\\">\\n    {{error.msg}}\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-form/currency-form.component.html\n// module id = 629\n// module chunks = 1","module.exports = \"<div>\\r\\n    <div #chart></div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-graphics/currency-graphics.component.html\n// module id = 630\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"currencies.length > 0\\\">\\n  <a *ngFor = \\\"let tpage of pages; let i = index\\\"\\n     (click)=\\\"GetRatesOnPage(i)\\\">\\n  <i class=\\\"glyphicon glyphicon-hand-right\\\"\\n     *ngIf=\\\"page == i\\\"\\n     aria-hidden=\\\"true\\\"></i>\\n    <span>page {{i+1}}</span>\\n  </a>\\n  <div style=\\\"overflow: auto; height:350px\\\">\\n  <table class=\\\"table table-striped table-hover table-responsive col-xs-12\\\">\\n    <thead>\\n    <tr>\\n      <th align=\\\"center\\\"\\n          class=\\\"col-xs-3\\\">\\n        Дата:\\n      </th>\\n      <th *ngFor = \\\"let currencyOnRange of currencies\\\"\\n          class=\\\"col-xs-3\\\"\\n          align=\\\"center\\\">\\n        {{currencyOnRange[0].Cur_Name}}\\n      </th>\\n    </tr>\\n    </thead>\\n  </table>\\n\\n    <table class=\\\"table table-striped table-hover table-responsive col-xs-12\\\">\\n      <tbody>\\n        <tr *ngFor=\\\"let currencyDates of currencies[0]; let i = index;\\\">\\n          <td>\\n            <strong>{{currencies[0][i].Date.slice(5,10).replace('-','.')}}</strong>\\n          </td>\\n          <td *ngFor=\\\"let currencyNames of currencies; let j = index\\\">\\n            {{currencies[j][i].Cur_OfficialRate}}\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <a *ngIf=\\\"dateToCurrent != dateTo\\\" (click)=\\\"GetMoreRates()\\\">\\n      <i class=\\\"glyphicon glyphicon-arrow-down\\\" aria-hidden=\\\"true\\\"></i>\\n      Show More Dates</a>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/currency-list/currency-list.component.html\n// module id = 631\n// module chunks = 1"],"sourceRoot":""}